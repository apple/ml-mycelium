import{s as jn,e,a as l,J as E,c as p,g as h,d as u,b as g,f as s,K as P,h as b,L as ss,i as t,j as Bn,n as bn,q as as,r as ts,o as es}from"../chunks/scheduler.BZf3Antt.js";import{S as Fn,i as On,c as ps,a as os,m as cs,t as ls,b as us,d as is}from"../chunks/index.C7bWdOrd.js";import{N as ks,b as rs,a as An,V as Gn,T as _n}from"../chunks/viewer.BYFc8Cdc.js";/* empty css                                */function ds(M){let k,w="Getting Started",d,i,v=`The following shows a small hierarchical graph visualized by Mycelium.
In this section we will show you how to recreate that example.`,o,f,m,y,_,x='There are several steps required to embed Mycelium into your application, which we will outline below. You can also find the full <a href="">source code of this example</a> on GitHub.',T,c,N,Y='<code class="language-sh"><span class="token function">npm</span> <span class="token function">install</span> @apple/mycelium</code>',K,C,r=`Now we can import the library via the following commands.
Itâ€™s important to note that we also have to import the provided CSS stylesheet, otherwise some styles might be missing.`,J,H,U,Kn=`<code class="language-ts"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> myc <span class="token keyword">from</span> <span class="token string">'@apple/mycelium'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">'@apple/mycelium/dist/style.css'</span><span class="token punctuation">;</span></code>`,Q,I,xn="Creating a Network",X,L,Nn=`Next, we can create a simple network.
Mycelium supports regular nodes, as well as hierarchical modules.`,Z,R,nn,Yn=`<code class="language-ts"><span class="token comment">// We define a set of nodes.</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token string">'f'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>myc<span class="token punctuation">.</span>NodeId<span class="token operator">></span><span class="token punctuation">;</span>

<span class="token comment">// And a set of modules.</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>m<span class="token punctuation">,</span> n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token string">'n'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>myc<span class="token punctuation">.</span>NodeId<span class="token operator">></span><span class="token punctuation">;</span></code>`,sn,W,Cn=`In Mycelium the contents of a node (and other user interface elements) is defined via a small <code>myc.ui</code> framework.
For this example we create two helper functions to generate nodes and modules respectively.`,an,S,tn,Jn=`<code class="language-ts"><span class="token keyword">function</span> <span class="token function">createNode</span><span class="token punctuation">(</span>nodeId<span class="token operator">:</span> myc<span class="token punctuation">.</span>NodeId<span class="token punctuation">)</span><span class="token operator">:</span> myc<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Node <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">Node</span><span class="token punctuation">(</span>
    nodeId<span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">VStack</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Node'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> fontWeight<span class="token operator">:</span> <span class="token number">600</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>nodeId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> selectable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">(</span>nodeId <span class="token operator">===</span> b <span class="token operator">&amp;&amp;</span> <span class="token punctuation">&#123;</span> badge<span class="token operator">:</span> <span class="token punctuation">&#123;</span> color<span class="token operator">:</span> <span class="token string">'red'</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">'i'</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">createModule</span><span class="token punctuation">(</span>nodeId<span class="token operator">:</span> myc<span class="token punctuation">.</span>NodeId<span class="token punctuation">)</span><span class="token operator">:</span> myc<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Node <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">Node</span><span class="token punctuation">(</span>
    nodeId<span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">VStack</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Module'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> fontWeight<span class="token operator">:</span> <span class="token number">600</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>nodeId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> backgroundColor<span class="token operator">:</span> myc<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Theme<span class="token punctuation">.</span><span class="token constant">GRAY_BACKGROUND</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,en,V,En="Now we have everything in place to define the structure of the network:",pn,D,on,Un=`<code class="language-ts"><span class="token keyword">const</span> network <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myc</span><span class="token punctuation">.</span><span class="token function">Network</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNode</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token function">createModule</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNodeWithParent</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token function">createModule</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNode</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token function">createNode</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNodeWithParent</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token function">createNode</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNodeWithParent</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token function">createNode</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNodeWithParent</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token function">createNode</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNode</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token function">createNode</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setNode</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token function">createNode</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setEdge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setEdge</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setEdge</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setEdge</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setEdge</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
network<span class="token punctuation">.</span><span class="token function">setEdge</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,cn,q,Pn=`Once we have defined the network, we can create an instance of <code>NetworkViewer</code> and mount it to the DOM.
First, we create a <code>div</code> container that will hold the viewer.`,ln,$,un,Qn='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 500</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>',kn,z,Mn=`Itâ€™s important to note that this container should have a defined size either via explicitly setting its size, or by deriving it via <code>width: 100%</code> and <code>height: 100%</code>.
Note that this requires the size of the parent to be set as well.`,rn,A,Tn="Then, we are ready to create a <code>viewer</code>:",dn,G,fn,Xn=`<code class="language-ts"><span class="token keyword">const</span> app <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'app'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> viewer <span class="token operator">=</span> myc<span class="token punctuation">.</span>NetworkViewer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>network<span class="token punctuation">,</span> app<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
  showBreadcrumbs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  minimap<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,mn,j,Hn=`Finally, we can interact with the representation through methods defined on the <code>viewer</code>.
For example, to set a selection we can simply call:`,wn,B,hn,Zn='<code class="language-ts"><span class="token keyword">await</span> viewer<span class="token punctuation">.</span><span class="token function">setSelection</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> shouldExpand<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',gn,F,In="Or, we can change the color of certain nodes via the <code>setDecoration</code> function.",vn,O,yn,ns=`<code class="language-ts"><span class="token keyword">await</span> viewer<span class="token punctuation">.</span><span class="token function">setDecoration</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
  backgroundColor<span class="token operator">:</span> <span class="token string">'rgb(237,249,239)'</span><span class="token punctuation">,</span>
  borderColor<span class="token operator">:</span> <span class="token string">'rgb(113,201,117)'</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> viewer<span class="token punctuation">.</span><span class="token function">setDecoration</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
  backgroundColor<span class="token operator">:</span> <span class="token string">'rgb(252,236,235)'</span><span class="token punctuation">,</span>
  borderColor<span class="token operator">:</span> <span class="token string">'rgb(239,90,88)'</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){k=e("h2"),k.textContent=w,d=l(),i=e("p"),i.textContent=v,o=l(),f=e("div"),m=e("div"),y=l(),_=e("p"),_.innerHTML=x,T=l(),c=e("pre"),N=new E(!1),K=l(),C=e("p"),C.textContent=r,J=l(),H=e("pre"),U=new E(!1),Q=l(),I=e("h3"),I.textContent=xn,X=l(),L=e("p"),L.textContent=Nn,Z=l(),R=e("pre"),nn=new E(!1),sn=l(),W=e("p"),W.innerHTML=Cn,an=l(),S=e("pre"),tn=new E(!1),en=l(),V=e("p"),V.textContent=En,pn=l(),D=e("pre"),on=new E(!1),cn=l(),q=e("p"),q.innerHTML=Pn,ln=l(),$=e("pre"),un=new E(!1),kn=l(),z=e("p"),z.innerHTML=Mn,rn=l(),A=e("p"),A.innerHTML=Tn,dn=l(),G=e("pre"),fn=new E(!1),mn=l(),j=e("p"),j.innerHTML=Hn,wn=l(),B=e("pre"),hn=new E(!1),gn=l(),F=e("p"),F.innerHTML=In,vn=l(),O=e("pre"),yn=new E(!1),this.h()},l(n){k=p(n,"H2",{"data-svelte-h":!0}),h(k)!=="svelte-1ris1ql"&&(k.textContent=w),d=u(n),i=p(n,"P",{"data-svelte-h":!0}),h(i)!=="svelte-1qotooc"&&(i.textContent=v),o=u(n),f=p(n,"DIV",{class:!0});var a=g(f);m=p(a,"DIV",{id:!0,style:!0}),g(m).forEach(s),a.forEach(s),y=u(n),_=p(n,"P",{"data-svelte-h":!0}),h(_)!=="svelte-102x2n2"&&(_.innerHTML=x),T=u(n),c=p(n,"PRE",{class:!0});var Ln=g(c);N=P(Ln,!1),Ln.forEach(s),K=u(n),C=p(n,"P",{"data-svelte-h":!0}),h(C)!=="svelte-16gejv0"&&(C.textContent=r),J=u(n),H=p(n,"PRE",{class:!0});var Rn=g(H);U=P(Rn,!1),Rn.forEach(s),Q=u(n),I=p(n,"H3",{"data-svelte-h":!0}),h(I)!=="svelte-5c902i"&&(I.textContent=xn),X=u(n),L=p(n,"P",{"data-svelte-h":!0}),h(L)!=="svelte-y3yy0"&&(L.textContent=Nn),Z=u(n),R=p(n,"PRE",{class:!0});var Wn=g(R);nn=P(Wn,!1),Wn.forEach(s),sn=u(n),W=p(n,"P",{"data-svelte-h":!0}),h(W)!=="svelte-1fx98rx"&&(W.innerHTML=Cn),an=u(n),S=p(n,"PRE",{class:!0});var Sn=g(S);tn=P(Sn,!1),Sn.forEach(s),en=u(n),V=p(n,"P",{"data-svelte-h":!0}),h(V)!=="svelte-4ep5mx"&&(V.textContent=En),pn=u(n),D=p(n,"PRE",{class:!0});var Vn=g(D);on=P(Vn,!1),Vn.forEach(s),cn=u(n),q=p(n,"P",{"data-svelte-h":!0}),h(q)!=="svelte-jenzwp"&&(q.innerHTML=Pn),ln=u(n),$=p(n,"PRE",{class:!0});var Dn=g($);un=P(Dn,!1),Dn.forEach(s),kn=u(n),z=p(n,"P",{"data-svelte-h":!0}),h(z)!=="svelte-1re30cl"&&(z.innerHTML=Mn),rn=u(n),A=p(n,"P",{"data-svelte-h":!0}),h(A)!=="svelte-1nyp0ad"&&(A.innerHTML=Tn),dn=u(n),G=p(n,"PRE",{class:!0});var qn=g(G);fn=P(qn,!1),qn.forEach(s),mn=u(n),j=p(n,"P",{"data-svelte-h":!0}),h(j)!=="svelte-o12q39"&&(j.innerHTML=Hn),wn=u(n),B=p(n,"PRE",{class:!0});var $n=g(B);hn=P($n,!1),$n.forEach(s),gn=u(n),F=p(n,"P",{"data-svelte-h":!0}),h(F)!=="svelte-99jzb1"&&(F.innerHTML=In),vn=u(n),O=p(n,"PRE",{class:!0});var zn=g(O);yn=P(zn,!1),zn.forEach(s),this.h()},h(){b(m,"id","app"),ss(m,"height","500px"),b(f,"class","border rounded-md overflow-hidden"),N.a=null,b(c,"class","language-sh"),U.a=null,b(H,"class","language-ts"),nn.a=null,b(R,"class","language-ts"),tn.a=null,b(S,"class","language-ts"),on.a=null,b(D,"class","language-ts"),un.a=null,b($,"class","language-html"),fn.a=null,b(G,"class","language-ts"),hn.a=null,b(B,"class","language-ts"),yn.a=null,b(O,"class","language-ts")},m(n,a){t(n,k,a),t(n,d,a),t(n,i,a),t(n,o,a),t(n,f,a),Bn(f,m),M[2](m),t(n,y,a),t(n,_,a),t(n,T,a),t(n,c,a),N.m(Y,c),t(n,K,a),t(n,C,a),t(n,J,a),t(n,H,a),U.m(Kn,H),t(n,Q,a),t(n,I,a),t(n,X,a),t(n,L,a),t(n,Z,a),t(n,R,a),nn.m(Yn,R),t(n,sn,a),t(n,W,a),t(n,an,a),t(n,S,a),tn.m(Jn,S),t(n,en,a),t(n,V,a),t(n,pn,a),t(n,D,a),on.m(Un,D),t(n,cn,a),t(n,q,a),t(n,ln,a),t(n,$,a),un.m(Qn,$),t(n,kn,a),t(n,z,a),t(n,rn,a),t(n,A,a),t(n,dn,a),t(n,G,a),fn.m(Xn,G),t(n,mn,a),t(n,j,a),t(n,wn,a),t(n,B,a),hn.m(Zn,B),t(n,gn,a),t(n,F,a),t(n,vn,a),t(n,O,a),yn.m(ns,O)},p:bn,i:bn,o:bn,d(n){n&&(s(k),s(d),s(i),s(o),s(f),s(y),s(_),s(T),s(c),s(K),s(C),s(J),s(H),s(Q),s(I),s(X),s(L),s(Z),s(R),s(sn),s(W),s(an),s(S),s(en),s(V),s(pn),s(D),s(cn),s(q),s(ln),s($),s(kn),s(z),s(rn),s(A),s(dn),s(G),s(mn),s(j),s(wn),s(B),s(gn),s(F),s(vn),s(O)),M[2](null)}}}function fs(M,k,w){const[d,i,v,o,f,m]=["a","b","c","d","e","f"],[y,_]=["m","n"];function x(r){return new An(r,new Gn(new _n("Node").with({fontWeight:600}),new _n(r))).with({selectable:!0,...r===i&&{badge:{color:"red",text:"i"}}})}function T(r){return new An(r,new Gn(new _n("Module").with({fontWeight:600}),new _n(r))).with({backgroundColor:void 0})}const c=new ks;c.setNode(_,T(_)),c.setNodeWithParent(y,T(y),_),c.setNode(d,x(d)),c.setNodeWithParent(i,x(i),_),c.setNodeWithParent(v,x(v),y),c.setNodeWithParent(o,x(o),y),c.setNode(f,x(f)),c.setNode(m,x(m)),c.setEdge(d,i),c.setEdge(i,v),c.setEdge(i,o),c.setEdge(v,o),c.setEdge(o,f),c.setEdge(o,m);let N,Y;as(()=>{w(1,Y=rs.create(c,N,{showBreadcrumbs:!0,showResetView:!0,minimap:!1,watermark:!1}))});async function K(r){r!==void 0&&(await r.setSelection(o,{shouldExpand:!0}),r.setDecoration(d,{backgroundColor:"rgb(237,249,239)",borderColor:"rgb(113,201,117)"}),r.setDecoration(m,{backgroundColor:"rgb(252,236,235)",borderColor:"rgb(239,90,88)"}))}function C(r){ts[r?"unshift":"push"](()=>{N=r,w(0,N)})}return M.$$.update=()=>{M.$$.dirty&2&&K(Y)},[N,Y,C]}class ms extends Fn{constructor(k){super(),On(this,k,fs,ds,jn,{})}}function ws(M){let k,w,d,i,v;return i=new ms({}),{c(){k=l(),w=e("div"),d=e("article"),ps(i.$$.fragment),this.h()},l(o){es("svelte-1c3kfvx",document.head).forEach(s),k=u(o),w=p(o,"DIV",{class:!0});var m=g(w);d=p(m,"ARTICLE",{});var y=g(d);os(i.$$.fragment,y),y.forEach(s),m.forEach(s),this.h()},h(){document.title="Mycelium â€¢ Getting Started",b(w,"class","mt-10 container prose")},m(o,f){t(o,k,f),t(o,w,f),Bn(w,d),cs(i,d,null),v=!0},p:bn,i(o){v||(ls(i.$$.fragment,o),v=!0)},o(o){us(i.$$.fragment,o),v=!1},d(o){o&&(s(k),s(w)),is(i)}}}class _s extends Fn{constructor(k){super(),On(this,k,null,ws,jn,{})}}export{_s as component};
